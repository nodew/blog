{"data":{"markdownRemark":{"id":"52024ef8-bbaf-5aee-9299-ed8627d2f874","html":"<p>最近倒腾东西，翻出了几年前入手的一个raspberry pi 2代 b+的板子，上面都蒙了一层灰，开机后发现还能用。发挥环保主义的精神，废物再利用起来。但是现在遇到的问题是：一、手边上没有显示器，二、网上经常检索到的另一种方法是通过网线直连，共享pc的网络给树莓派，然后再通过ssh登录树莓派，这种方法的问题在于我一台mac，一台surface都没有网线的端口，又不想专门为这个再买一个适配器。</p>\n<p>那就完全没有方法了吗？当然不是的。</p>\n<h2 id=\"环境\"><a href=\"#%E7%8E%AF%E5%A2%83\" aria-label=\"环境 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>环境</h2>\n<ul>\n<li>\n<p>2代树莓派（3代树莓派和 Pi Zero W 应该都是可以的）</p>\n</li>\n<li>\n<p>USB Wi-Fi 适配器 (如果是3代的话，内置Wi-Fi支持，这个不是必须的)</p>\n</li>\n<li>\n<p>8GB SD卡</p>\n</li>\n<li>\n<p>电源</p>\n</li>\n<li>\n<p>个人 Wi-Fi</p>\n</li>\n</ul>\n<h2 id=\"安装镜像\"><a href=\"#%E5%AE%89%E8%A3%85%E9%95%9C%E5%83%8F\" aria-label=\"安装镜像 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装镜像</h2>\n<p>在树莓派的<a href=\"https://www.raspberrypi.org/downloads/\">官网</a>上下载最新的 <code class=\"language-text\">Raspbian Jessie</code> 的镜像或者 <code class=\"language-text\">Raspbian Stretch</code> 的镜像。我这里下使用的是最新的 <code class=\"language-text\">2018-06-07-raspbian-stretch.img</code>。如果后面只想在终端中使用的话，完全可以下载对应的 lite 版本。</p>\n<p>镜像下载好了之后，写到你的SD卡里面就可以了。Windows下可以使用比较经典的 <code class=\"language-text\">Win32DiskImager</code>，Mac下推荐开源的 <a href=\"https://github.com/resin-io/etcher\">Etcher</a>，或者直接使用 <code class=\"language-text\">diskutil</code> 也是可以的，相关使用这里不再赘述。</p>\n<h2 id=\"配置-wi-fi-和-ssh\"><a href=\"#%E9%85%8D%E7%BD%AE-wi-fi-%E5%92%8C-ssh\" aria-label=\"配置 wi fi 和 ssh permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置 Wi-Fi 和 SSH</h2>\n<p>镜像写入之后会挂载一个<code class=\"language-text\">boot</code>的卷。Windows下可以直接通过资源管理工具打开。Mac下建议使用命令行。</p>\n<h3 id=\"启用-ssh\"><a href=\"#%E5%90%AF%E7%94%A8-ssh\" aria-label=\"启用 ssh permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>启用 SSH</h3>\n<p>树莓派默认情况下是没有打开ssh连接的，在 <code class=\"language-text\">boot</code> 卷的根路径下新建一个名叫 <code class=\"language-text\">ssh</code>的空文件，树莓派启动的时候就会开启ssh的功能。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">touch</span> <span class=\"token function\">ssh</span></code></pre></div>\n<h3 id=\"wi-fi-连接设置\"><a href=\"#wi-fi-%E8%BF%9E%E6%8E%A5%E8%AE%BE%E7%BD%AE\" aria-label=\"wi fi 连接设置 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wi-Fi 连接设置</h3>\n<p>在 <code class=\"language-text\">boot</code> 卷的根路径下新建一个名叫 <code class=\"language-text\">wpa_supplicant.conf</code>的文件。树莓派启动之后，发现 <code class=\"language-text\">boot</code> 下面有这个文件的话，会把这个文件拷贝到 <code class=\"language-text\">/etc/wpa_supplicant/</code>路径下面，这就是我们树莓派的 Wi-Fi 连接的配置文件。</p>\n<p>下面来看一下这个文件应该怎么写。</p>\n<p>如果你的系统是 <code class=\"language-text\">Raspbian Jessie</code>的话，填入以下配置</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">network<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n    ssid<span class=\"token operator\">=</span><span class=\"token string\">\"你的Wi-Fi名称\"</span>\n    psk<span class=\"token operator\">=</span><span class=\"token string\">\"Wi-Fi密码\"</span>\n    key_mgmt<span class=\"token operator\">=</span>WPA-PSK\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>如果是系统是 <code class=\"language-text\">Raspbian Stretch</code> 的话，配置如下</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ctrl_interface<span class=\"token operator\">=</span>DIR<span class=\"token operator\">=</span>/var/run/wpa_supplicant GROUP<span class=\"token operator\">=</span>netdev\nnetwork<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n    ssid<span class=\"token operator\">=</span><span class=\"token string\">\"你的Wi-Fi名称\"</span>\n    psk<span class=\"token operator\">=</span><span class=\"token string\">\"Wi-Fi密码\"</span>\n    key_mgmt<span class=\"token operator\">=</span>WPA-PSK\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>多了一行 ctrl_interface 的配置，但是目前我还不太清楚这个到底是什么含义。有知道的朋友可以在评论区指出。</p>\n<p>注意：这里填写的 Wi-Fi 应该和 PC 当前连接的 Wi-Fi 保持一致。</p>\n<h3 id=\"发现-ip\"><a href=\"#%E5%8F%91%E7%8E%B0-ip\" aria-label=\"发现 ip permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>发现 IP</h3>\n<p>到这里我们距离连接上树莓派就之差一步之遥了，通过 SSH 的方式登录树莓派还需要知道树莓派在局域网中的 IP 地址。</p>\n<p>我们把SD卡插到树莓派上，然后通电。这时候红色指示灯亮起，表示说已通电。绿色指示灯闪烁，表示树莓派在往SD卡读写数据。等绿灯闪烁一段时间基本不闪之后，就说明我们的树莓派已经开机成功。</p>\n<p>这时候，如果我们的PC是 Windows，一个简单的方法就是在 powershell 输入<code class=\"language-text\">arp -a</code>，其中，返回的列表后面类型对应是动态类型的，就是我们接入的设备。</p>\n<p>分别在树莓派开机和关机的状态下执行，多出来的那个动态连接地址就是树莓派的 IP 地址。</p>\n<p>如果喜欢图形化界面的话，Windows 下可以使用<code class=\"language-text\">Advanced Ip Scanner</code>，Mac下有 <code class=\"language-text\">LanScan</code>, 可以直接从 hostname 辨别出raspberry pi。</p>\n<h3 id=\"ssh-登录\"><a href=\"#ssh-%E7%99%BB%E5%BD%95\" aria-label=\"ssh 登录 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSH 登录</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">ssh</span> pi@ip_address_of_your_raspberry_pi</code></pre></div>\n<p>然后用默认密码<code class=\"language-text\">raspberry</code>就可以登录设备了。</p>\n<h2 id=\"使用串口连接树莓派\"><a href=\"#%E4%BD%BF%E7%94%A8%E4%B8%B2%E5%8F%A3%E8%BF%9E%E6%8E%A5%E6%A0%91%E8%8E%93%E6%B4%BE\" aria-label=\"使用串口连接树莓派 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用串口连接树莓派</h2>\n<p>树莓派作为一款功能强大的开源硬件，肯定是支持串口通信的。但是也有两个问题，第一、树莓派本身并没有默认开启串口通信功能，第二，很多开发者如果本身不是做硬件的，可能不会有 USB 转 TTL 的连接线。我这里是刚好有一根上古遗留下来的（如果没有，但是对这种方式敢兴趣，也可以直接在万能的淘宝上淘一根，10块钱左右）</p>\n<h3 id=\"usb-转-ttl-线说明\"><a href=\"#usb-%E8%BD%AC-ttl-%E7%BA%BF%E8%AF%B4%E6%98%8E\" aria-label=\"usb 转 ttl 线说明 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>USB 转 TTL 线说明</h3>\n<p>一端是USB接口，另一端4根出线，颜色不同。</p>\n<ul>\n<li>\n<p>红色，电源供电，一般是3V或者5V，如果要用它给树莓派供电的话，树莓派的工作电压是5V</p>\n</li>\n<li>\n<p>黑色，接地</p>\n</li>\n<li>\n<p>白色，信号输入</p>\n</li>\n<li>\n<p>绿色，信号输出</p>\n</li>\n</ul>\n<h3 id=\"开启-uart\"><a href=\"#%E5%BC%80%E5%90%AF-uart\" aria-label=\"开启 uart permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开启 UART</h3>\n<p>分两种情况：</p>\n<p>一、通过上面的方法或者其他方式，已经能连接使用树莓派了。这种情况下，直接在树莓派对终端中输入</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> raspi-config</code></pre></div>\n<p>在弹出对对话框中选择 <code class=\"language-text\">Interfacing Options</code>，进入下一个对话框，然后选择<code class=\"language-text\">Serial</code>，最后选择 <code class=\"language-text\">YES</code>，回到命令行后重启树莓派就可以了。</p>\n<p>二、回到我的使用场景，按上面的步骤安装好了镜像，但是还没有启动系统。</p>\n<p>这种时候的一个解决方案是，在 <code class=\"language-text\">boot</code> 卷的根路径下找到 <code class=\"language-text\">cmdline.text</code> 和 <code class=\"language-text\">config.text</code>两个文件。首先打开 <code class=\"language-text\">cmdline.text</code>，检查文件里面是不是有 <code class=\"language-text\">console=serial0,115200</code> 的这个配置，115200是树莓派的波特率，一般都是已经有的，如果没有，行尾加上这个配置。接下来打开 <code class=\"language-text\">config.text</code> 这个文件，在新行追加 <code class=\"language-text\">enable_uart=1</code>，0 - 关闭，1 - 开启。</p>\n<p>然后把 SD 卡插入树莓派，开机。接下来就可以开始连接我们的树莓派了。</p>\n<h3 id=\"uart-连接\"><a href=\"#uart-%E8%BF%9E%E6%8E%A5\" aria-label=\"uart 连接 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UART 连接</h3>\n<p><a href=\"https://pinout.xyz/\">https://pinout.xyz/</a> 这是一个很有用的网站，上面列出了树莓派的GPIO各个管脚的作用，点击管脚我们可以查看相应的说明，对我们做GPIO相关的开发很用帮助。</p>\n<p>这里先打开这个网站，找到标注为 <code class=\"language-text\">RXD</code> 和 <code class=\"language-text\">TXD</code> 的这两个管脚的位置。<code class=\"language-text\">TXD</code>是树莓派 UART 的输出，<code class=\"language-text\">RXD</code>是树莓派的输入。</p>\n<p>然后把USB转TTL线的黑色线接树莓派的<code class=\"language-text\">Ground</code>，白色接<code class=\"language-text\">TXD</code>，绿色接<code class=\"language-text\">RXD</code>，如果已经有电源供电，红线可以不接。</p>\n<p>连接好了之后，如果我们在 Windows 环境下，可以使用 putty。打开 putty，选择串口通信，Serial line 输入 <code class=\"language-text\">COM3</code>，Speed 输入 <code class=\"language-text\">115200</code>，即树莓派的波特率。进去之后，我们看到一个小黑窗，这时候，键盘输入回车，树莓派就会让我们输入用户名以及密码，输入正确之后我们就可以为所欲为了。</p>\n<p>如果是在 Mac 环境下的话，我们把 USB 插入 Mac之后，我们的<code class=\"language-text\">/dev</code>路径下就会多出一个设备，假如叫做 <code class=\"language-text\">cu.usbserial</code>，这时候我们可以借助两个命令行工具。一个是 <code class=\"language-text\">minicom</code>，另一个是 <code class=\"language-text\">screen</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ brew <span class=\"token function\">install</span> minicom\n\n<span class=\"token comment\"># or</span>\n\n$ brew <span class=\"token function\">install</span> <span class=\"token function\">screen</span></code></pre></div>\n<p>安装好之后，如下，使用相应的命令行</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ minicom -o -D /dev/cu.usbserial -b 115200\n\n<span class=\"token comment\"># or</span>\n\n$ <span class=\"token function\">screen</span> /dev/cu.usbserial 115200</code></pre></div>\n<p>再和 Windows 一样，输入用户名密码就可以连接使用了。</p>\n<p>以上。</p>\n<h2 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p>1、 <a href=\"https://styxit.com/2017/03/14/headless-raspberry-setup.html\">Headless Raspberry Pi setup with wifi</a></p>\n<p>2、 <a href=\"https://www.thepolyglotdeveloper.com/2017/02/connect-raspberry-pi-pi-zero-usb-ttl-serial-cable/\">Connect To A Raspberry Pi And Pi Zero With A USB To TTL Serial Cable</a></p>","fields":{"slug":"/posts/start-raspberrypi-without-screen/","tagSlugs":["/tag/raspberry-pi/"]},"frontmatter":{"date":"2018-08-02","description":"最近倒腾东西，翻出了几年前入手的一个raspberry pi 2代 b+的板子，上面都蒙了一层灰，开机后发现还能用。发挥环保主义的精神，废物再利用起来。本文主要讲笔者怎么在没有显示器、不借助网线直连的情况下通过Wi-Fi连接以及通过串口连接的方式来连接到树莓派的，记录下来一是方便日后折腾，二来是希望能帮助遇到过同样问题的朋友。","tags":["raspberry-pi"],"title":"树莓派折腾笔记 - 无显示器情况下连接使用树莓派"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/start-raspberrypi-without-screen/"}}