{"version":3,"file":"component---src-templates-post-template-tsx-content-file-path-d-projects-blog-posts-001-lazy-list-with-generator-and-iterator-index-mdx-2799ae253ae3f6206503.js","mappings":"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","sources":["webpack://blog/./node_modules/dayjs/dayjs.min.js","webpack://blog/./node_modules/dayjs/plugin/localizedFormat.js","webpack://blog/./posts/001-lazy-list-with-generator-and-iterator/index.mdx","webpack://blog/./src/templates/post-template.tsx","webpack://blog/./src/components/TagIcon.tsx","webpack://blog/./node_modules/lodash/_Symbol.js","webpack://blog/./node_modules/lodash/_arrayMap.js","webpack://blog/./node_modules/lodash/_arrayReduce.js","webpack://blog/./node_modules/lodash/_asciiWords.js","webpack://blog/./node_modules/lodash/_baseGetTag.js","webpack://blog/./node_modules/lodash/_basePropertyOf.js","webpack://blog/./node_modules/lodash/_baseToString.js","webpack://blog/./node_modules/lodash/_createCompounder.js","webpack://blog/./node_modules/lodash/_deburrLetter.js","webpack://blog/./node_modules/lodash/_freeGlobal.js","webpack://blog/./node_modules/lodash/_getRawTag.js","webpack://blog/./node_modules/lodash/_hasUnicodeWord.js","webpack://blog/./node_modules/lodash/_objectToString.js","webpack://blog/./node_modules/lodash/_root.js","webpack://blog/./node_modules/lodash/_unicodeWords.js","webpack://blog/./node_modules/lodash/deburr.js","webpack://blog/./node_modules/lodash/isArray.js","webpack://blog/./node_modules/lodash/isObjectLike.js","webpack://blog/./node_modules/lodash/isSymbol.js","webpack://blog/./node_modules/lodash/kebabCase.js","webpack://blog/./node_modules/lodash/toString.js","webpack://blog/./node_modules/lodash/words.js","webpack://blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=function(t){return t instanceof _},S=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=v;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),l=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?l(1,0):l(31,11);case f:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,l=this;r=Number(r);var $=O.p(h),y=function(t){var e=w(l);return O.w(e.date(e.date()+Math.round(t*r)),l)};if($===f)return this.set(f,this.$M+r);if($===c)return this.set(c,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=n.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},$={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:i};return r.replace(y,(function(t,e){return e||$[t]||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,v=this-M,g=O.m(this,M);return g=($={},$[c]=g/12,$[f]=g,$[h]=g/3,$[o]=(v-m)/6048e5,$[a]=(v-m)/864e5,$[u]=v/n,$[s]=v/e,$[i]=v/t,$)[y]||v,l?g:O.a(g)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),T=_.prototype;return w.prototype=T,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){T[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[g],w.Ls=D,w.p={},w}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_localizedFormat=t()}(this,(function(){\"use strict\";var e={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"};return function(t,o,n){var r=o.prototype,i=r.format;n.en.formats=e,r.format=function(t){void 0===t&&(t=\"YYYY-MM-DDTHH:mm:ssZ\");var o=this.$locale().formats,n=function(t,o){return t.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var i=r&&r.toUpperCase();return n||o[r]||e[r]||o[i].replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,o){return t||o.slice(1)}))}))}(t,void 0===o?{}:o);return i.call(this,n)}}}));","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    span: \"span\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"初识 Lazy List\"), \"\\n\", React.createElement(_components.p, null, \"如果有了解过 Haskell 的朋友，对下面的这些表达一定不陌生\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"haskell\\\"><pre class=\\\"language-haskell\\\"><code class=\\\"language-haskell\\\"><span class=\\\"token builtin\\\">repeat</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token comment\\\">-- => [1, 1, 1, 1, 1,...]</span>\\r\\n<span class=\\\"token builtin\\\">cycle</span> <span class=\\\"token string\\\">\\\"abc\\\"</span> <span class=\\\"token comment\\\">-- => \\\"abcabcabc...\\\"</span>\\r\\n<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token operator\\\">..</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token comment\\\">-- => [1, 3, 5, 7, ...]</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"上面的几个表达式产生的都是无限列表。对于习惯了主流编程语言的朋友可能感到困惑，在有限的内存里面如何能表达无限的概念。主要的原因就是 Haskell 是一门默认采用惰性求值策略的语言，没有用到的部分，在内存里面只是一个表达式，并不会真正的去做计算。\"), \"\\n\", React.createElement(_components.p, null, \"如果只看上面的几个表达式，很多朋友可能会说，也没感觉到有什么神奇的地方，似乎并没有什么作用。我们再看看下面的代码。\"), \"\\n\", React.createElement(_components.p, null, \"Haskell 中的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">fibonacci</code>\"\n    }\n  }), \" 数列：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"haskell\\\"><pre class=\\\"language-haskell\\\"><code class=\\\"language-haskell\\\"><span class=\\\"token hvariable\\\">fibonacci</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">zipWith</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">+</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token hvariable\\\">fibonacci</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">tail</span> <span class=\\\"token hvariable\\\">fibonacci</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"这里 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">fibonacci</code>\"\n    }\n  }), \" 本身是一个惰性结构，所以在计算的时候，会先算出列表前面的两个 1，得到 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">1 : 1...</code>\"\n    }\n  }), \" 这样的结构，然后怎么表达 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">fibonacci</code>\"\n    }\n  }), \" 的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">fib(n) = fib(n - 1) + fib(n - 2)</code>\"\n    }\n  }), \" 特性呢？我们可以注意到，\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">n - 1</code>\"\n    }\n  }), \"和 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">n - 2</code>\"\n    }\n  }), \" 刚好在数列中相差一位，所以 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">n</code>\"\n    }\n  }), \" 可以看作是该数列错位的相加的结果。\"), \"\\n\", React.createElement(_components.p, null, \"我们再来看一则\", React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\"\n  }, \"筛法求素数\"), \"。不熟悉筛法的可以先点开 wiki 去看一下该算法的思路。下面这段代码是 Haskell 的一个简单实现。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"haskell\\\"><pre class=\\\"language-haskell\\\"><code class=\\\"language-haskell\\\"><span class=\\\"token hvariable\\\">primes</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">filter</span> <span class=\\\"token hvariable\\\">isPrime</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token operator\\\">..</span><span class=\\\"token punctuation\\\">]</span>\\r\\n  <span class=\\\"token keyword\\\">where</span>\\r\\n    <span class=\\\"token hvariable\\\">isPrime</span> <span class=\\\"token hvariable\\\">x</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token builtin\\\">all</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">\\\\</span><span class=\\\"token hvariable\\\">p</span> <span class=\\\"token operator\\\">-></span> <span class=\\\"token hvariable\\\">x</span> <span class=\\\"token operator\\\">`mod`</span> <span class=\\\"token hvariable\\\">p</span> <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">takeWhile</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">\\\\</span><span class=\\\"token hvariable\\\">p</span> <span class=\\\"token operator\\\">-></span> <span class=\\\"token hvariable\\\">p</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token hvariable\\\">p</span> <span class=\\\"token operator\\\">&lt;=</span> <span class=\\\"token hvariable\\\">x</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token hvariable\\\">primes</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"So, Why Lazy?\"), \"\\n\", React.createElement(_components.p, null, \"在某些不定长度的列表操作上，惰性列表会让代码和结构更灵活。用上面的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">primes</code>\"\n    }\n  }), \" 列表举个例子好了，在传统的 C 语言或者 Java 的实现里面，我们一般要先声明一个最大长度或者一个最大的取值范围，比如 10000 以内的素数。如果后面的计算要用到超过这个范围，我们就不得不重新调用生成函数，重新生成一份更长的列表。这里面的问题是：一、要主动去调用这个工厂函数，二、如果要复用已经计算出来的数据，手动去维护一个 cache 列表，势必增加代码的复杂度。另外一个可能的情况是，我们预先生成了一份很长的列表，后面的计算中只用到了列表头部的一丢丢数据，这也是极大的浪费。\"), \"\\n\", React.createElement(_components.p, null, \"惰性列表的使用增加了我们编程的表达能力，让我们可以更关注数据结构本身的特性，而不是浪费时间在如何去管理堆栈上面。因为，惰性求值特性保证我们在需要一个值的时候才会去计算，所以可以自动地最小化我们的计算量，节约资源。\"), \"\\n\", React.createElement(_components.p, null, \"比如我们可以通过 lazy byteString 去读、写文件，它本身不会把整个文件加载到我们的内存里面，而是按需的读取。有的时候我们读一个大文件，可能只筛选出需要的前几十条数据，却确不得不把几百 M 甚至上 G 的大文件整个的放到内存里面。\"), \"\\n\", React.createElement(_components.p, null, \"这里也找到一篇 14 年的文章 \", React.createElement(_components.a, {\n    href: \"http://filimanjaro.com/blog/2014/introducing-lazy-evaluation/\"\n  }, \"How to Speed Up Lo-Dash ×100? Introducing Lazy Evaluation\"), \"，感兴趣的可以点开看看。\"), \"\\n\", React.createElement(_components.h2, null, \"在 JavaScript 中实现 Lazy List\"), \"\\n\", React.createElement(_components.p, null, \"在 JavaScript 有没有惰性结构呢？先看下面这个例子。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">let</span> fetchSomething <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">fetch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/some/thing'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>condition<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  fetchSomething <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">fetch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/some/thing/condition'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\nfetchSomething<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token comment\\\">// TODO</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">fetch</code>\"\n    }\n  }), \" 方法本身是立即执行的，如果满足条件，这里的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">fetch</code>\"\n    }\n  }), \" 方法会执行两次。这并不是我们期待的行为，这里需要让这个 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">fetch</code>\"\n    }\n  }), \" 的动作在我们需要的时候才去执行，而不是声明的时候就开始执行的话，通常的做法是把它改成下面的样子。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">let</span> <span class=\\\"token function-variable function\\\">fetchSomething</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">fetch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/some/thing'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>condition<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  fetchSomething <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">fetch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/some/thing/condition'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\nfetchSomething<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token comment\\\">// TODO</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"由此启发，我们大致可以实现如下的结构。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">List<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  head<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">T</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token constant\\\">T</span>\\r\\n  tail<span class=\\\"token operator\\\">:</span> List<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> List<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span>\\r\\n\\r\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>head<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function-variable function\\\">tail</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> List<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">head</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> head<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>tail <span class=\\\"token operator\\\">=</span> tail<span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">List&lt;T></code>\"\n    }\n  }), \" 本质上是一个单链表，构造函数里面传入的 tail 是一个工厂函数，用来构建新的 List 节点。只有在我们访问到一个节点的时候，才对它的 head 求值，访问它的下一个节点的时候对 tail 求值，不然 head 和 tail 都只是待求值的表达式。\"), \"\\n\", React.createElement(_components.p, null, \"这种方式看起来似乎已经解决了我的问题，但是这种结构在和普通的 Array 做互相转换的时候，存在大量不必要的额外开销。\"), \"\\n\", React.createElement(_components.p, null, \"那 JavaScript 中有没有更天然的结构，可以让我们免于去构造这样一个复杂的对象，简化代码的同时，让我们的代码更具有普适性呢？\"), \"\\n\", React.createElement(_components.h3, null, \"初识 Iterable\"), \"\\n\", React.createElement(_components.p, null, \"ES6 的新特性给了我想要的答案，\", React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\"\n  }, \"Iteration Protocols\"), \"。如果嫌 MDN 的描述太长，可以直接看下面等价的类型声明。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Iterable<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token punctuation\\\">[</span>Symbol<span class=\\\"token punctuation\\\">.</span>iterator<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> Iterator<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Iterator<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> IteratorResult<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">IteratorResult<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  done<span class=\\\"token operator\\\">:</span> Boolean<span class=\\\"token punctuation\\\">;</span>\\r\\n  value<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">IterableIterator<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token punctuation\\\">[</span>Symbol<span class=\\\"token punctuation\\\">.</span>iterator<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> Iterator<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> IteratorResult<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"所有实现一个 Iterable 接口的对象都可以通过诸如 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">for...of...</code>\"\n    }\n  }), \"、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">...itor</code>\"\n    }\n  }), \" 以及 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Array.from</code>\"\n    }\n  }), \" 来访问，当 next 方法的返回值中 done 为 true 时，迭代结束。而且只有我们访问 next 方法时，才会进入下一步迭代，是理想的 Lazy 结构。\"), \"\\n\", React.createElement(_components.p, null, \"这时候我们看一下我们的 fibonacci 该怎么写？\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Fibonacci</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">IterableIterator<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">number</span><span class=\\\"token operator\\\">></span></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">private</span> prev <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">private</span> next <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">let</span> current <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>prev<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>prev <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>next<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>next <span class=\\\"token operator\\\">=</span> current <span class=\\\"token operator\\\">+</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>prev<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      done<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\r\\n      value<span class=\\\"token operator\\\">:</span> current\\r\\n    <span class=\\\"token punctuation\\\">}</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n  <span class=\\\"token punctuation\\\">[</span>Symbol<span class=\\\"token punctuation\\\">.</span>iterator<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">const</span> fib <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Fibonacci</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nfib<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// => { done: false, value: 1 }</span>\\r\\nfib<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// => { done: false, value: 1 }</span>\\r\\nfib<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// => { done: false, value: 2 }</span>\\r\\n<span class=\\\"token comment\\\">// etc</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"到这里，我们已经可以表达一个惰性的无限数列了。但是上面的代码毕竟过于繁琐，好在 ES6 同时给我们提供了 Generator, 可以让我们很方便地书写 IterableItorator，从某种意义上来讲，Generator 可以说是上面代码的语法糖。\"), \"\\n\", React.createElement(_components.p, null, \"使用 Generator，上面的代码可以简化成下面的样子。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token function\\\">fibonacci</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> prev <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> next <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">yield</span> prev<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> temp <span class=\\\"token operator\\\">=</span> prev<span class=\\\"token punctuation\\\">;</span>\\r\\n    prev <span class=\\\"token operator\\\">=</span> next<span class=\\\"token punctuation\\\">;</span>\\r\\n    next <span class=\\\"token operator\\\">=</span> temp <span class=\\\"token operator\\\">+</span> prev<span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">const</span> fib <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">fibonacci</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token comment\\\">// etc</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"这里不再去花段落介绍 Generator 的语法，不了解的同学可以先去阅读下这篇文章 \", React.createElement(_components.a, {\n    href: \"https://medium.com/dailyjs/a-simple-guide-to-understanding-javascript-es6-generators-d1c350551950\"\n  }, \"A Simple Guide to Understanding Javascript (ES6) Generators\"), \"。\"), \"\\n\", React.createElement(_components.h3, null, \"定义 Infinite List\"), \"\\n\", React.createElement(_components.p, null, \"接着上面的代码往下写，下面的代码分别实现了文章开头的 repeat, cycle, iterate, range 等方法。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">repeat</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">yield</span> item<span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">cycle</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span>items<span class=\\\"token operator\\\">:</span> Iterable<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">yield</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span>items<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">iterate</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function-variable function\\\">fn</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">,</span> initial<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> val <span class=\\\"token operator\\\">=</span> initial<span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">yield</span> val<span class=\\\"token punctuation\\\">;</span>\\r\\n    val <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">fn</span><span class=\\\"token punctuation\\\">(</span>val<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span>start<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">,</span> end <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">Infinity</span><span class=\\\"token punctuation\\\">,</span> step <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>start <span class=\\\"token operator\\\">&lt;=</span> end<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">yield</span> start<span class=\\\"token punctuation\\\">;</span>\\r\\n    start <span class=\\\"token operator\\\">+=</span> step<span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"可以看到，代码是非常直观且易于理解的。\"), \"\\n\", React.createElement(_components.h3, null, \"定义 Operator\"), \"\\n\", React.createElement(_components.p, null, \"有了列表之后，我们需要在列表之上进行操作，下面的代码分别实现了 map/filter/take/takeWhile 方法。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">map</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">U</span><span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function-variable function\\\">fn</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token constant\\\">U</span><span class=\\\"token punctuation\\\">,</span> items<span class=\\\"token operator\\\">:</span> Iterable<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> item <span class=\\\"token keyword\\\">of</span> items<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">yield</span> <span class=\\\"token function\\\">fn</span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">filter</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span>\\r\\n  <span class=\\\"token function-variable function\\\">predicate</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token builtin\\\">boolean</span><span class=\\\"token punctuation\\\">,</span>\\r\\n  items<span class=\\\"token operator\\\">:</span> Iterable<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span>\\r\\n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> item <span class=\\\"token keyword\\\">of</span> items<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">predicate</span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      <span class=\\\"token keyword\\\">yield</span> item<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">take</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span>n<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">,</span> items<span class=\\\"token operator\\\">:</span> Iterable<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>n <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> item <span class=\\\"token keyword\\\">of</span> items<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">yield</span> item<span class=\\\"token punctuation\\\">;</span>\\r\\n    i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">>=</span> n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">takeWhile</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span>\\r\\n  <span class=\\\"token function-variable function\\\">predicate</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token builtin\\\">boolean</span><span class=\\\"token punctuation\\\">,</span>\\r\\n  items<span class=\\\"token operator\\\">:</span> Iterable<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span>\\r\\n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> item <span class=\\\"token keyword\\\">of</span> items<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">predicate</span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      <span class=\\\"token keyword\\\">yield</span> item<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"上面的代码都是比较简单的。比较难一点的是去实现 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">zip</code>\"\n    }\n  }), \" 方法，即怎么把两个列表合并成一个？\"), \"\\n\", React.createElement(_components.p, null, \"难点在于接收一个 Iterable 的对象的话，本身并不一定要实现 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">next</code>\"\n    }\n  }), \" 方法的，比如 Array、String 等，同时 Iterable 对象也并不是都可以通过 index 来访问的。此外，如果想先通过 Array.from 变成数组，然后在数组上进行操作，我们会遇到一个情况是我们传入的 Iterable 对象是无限的，如上文的 fibonacci 一样，这种情况下是不能使用 Array.from 的。\"), \"\\n\", React.createElement(_components.p, null, \"这时候我的一个思路是需要想办法把一个 Iterable 的对象提升成为 IterableItorator 对象，然后通过 next 方法，逐一遍历。\"), \"\\n\", React.createElement(_components.p, null, \"How？幸好 Generator 给我们提供了一个 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">yield*</code>\"\n    }\n  }), \" 操作符，可以让我们方便的定义出一个 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">lift</code>\"\n    }\n  }), \" 方法。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">lift</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span>items<span class=\\\"token operator\\\">:</span> Iterable<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> IterableIterator<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">yield</span><span class=\\\"token operator\\\">*</span> items<span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"有了这个 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">lift</code>\"\n    }\n  }), \" 方法之后，就可以很方便的书写 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">zip</code>\"\n    }\n  }), \" 方法和 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">zipWith</code>\"\n    }\n  }), \" 方法了。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">zip</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">G</span><span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span>\\r\\n  seqA<span class=\\\"token operator\\\">:</span> Iterable<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\r\\n  seqB<span class=\\\"token operator\\\">:</span> Iterable<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">G</span><span class=\\\"token operator\\\">></span>\\r\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> IterableIterator<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">G</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> itorA <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">lift</span><span class=\\\"token punctuation\\\">(</span>seqA<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> itorB <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">lift</span><span class=\\\"token punctuation\\\">(</span>seqB<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> valA <span class=\\\"token operator\\\">=</span> itorA<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> valB <span class=\\\"token operator\\\">=</span> itorB<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>valA<span class=\\\"token punctuation\\\">.</span>done <span class=\\\"token operator\\\">||</span> <span class=\\\"token operator\\\">!</span>valB<span class=\\\"token punctuation\\\">.</span>done<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">yield</span> <span class=\\\"token punctuation\\\">[</span>valA<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">,</span> valB<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    valA <span class=\\\"token operator\\\">=</span> itorA<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    valB <span class=\\\"token operator\\\">=</span> itorB<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">zipWith</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">G</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">R</span><span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span>\\r\\n  <span class=\\\"token function-variable function\\\">fn</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">,</span> b<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">G</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token constant\\\">R</span><span class=\\\"token punctuation\\\">,</span>\\r\\n  seqA<span class=\\\"token operator\\\">:</span> Iterable<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\r\\n  seqB<span class=\\\"token operator\\\">:</span> Iterable<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">G</span><span class=\\\"token operator\\\">></span>\\r\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> IterableIterator<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">R</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> itorA <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">lift</span><span class=\\\"token punctuation\\\">(</span>seqA<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> itorB <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">lift</span><span class=\\\"token punctuation\\\">(</span>seqB<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> valA <span class=\\\"token operator\\\">=</span> itorA<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> valB <span class=\\\"token operator\\\">=</span> itorB<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>valA<span class=\\\"token punctuation\\\">.</span>done <span class=\\\"token operator\\\">||</span> <span class=\\\"token operator\\\">!</span>valB<span class=\\\"token punctuation\\\">.</span>done<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">yield</span> <span class=\\\"token function\\\">fn</span><span class=\\\"token punctuation\\\">(</span>valA<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">,</span> valB<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    valA <span class=\\\"token operator\\\">=</span> itorA<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    valB <span class=\\\"token operator\\\">=</span> itorB<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">next</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"更多的方法可以去底部的点开我的 repo，这里就不一一列举了。\"), \"\\n\", React.createElement(_components.h2, null, \"结语\"), \"\\n\", React.createElement(_components.p, null, \"Generator 和 Iterator 是 ES6 带给我们的非常强大的语言层面的能力，它本身的求值可以看作是惰性的。\"), \"\\n\", React.createElement(_components.p, null, \"差不多在 13 年左右，TJ 的 \", React.createElement(_components.a, {\n    href: \"https://github.com/tj/co\"\n  }, \"co\"), \" 刚出来的时候，其代码的短小精悍可以说是相当惊艳的。然而在我们的使用中，一来受限于浏览器兼容性，二来受限于我们的使用场景，个人认为我们对其特性开发得还远远不够。结合 IO、network，Generator 和 Iterator 还能为我们做更多的事情。\"), \"\\n\", React.createElement(_components.p, null, \"另外，需要特别说明的是，虽然这篇文章通篇是在讲惰性列表，但是惰性列表并不是银弹，相反的，惰性结构的滥用会在程序的执行过程中缓存大量的 thunk，增大在内存上的开销。\"), \"\\n\", React.createElement(_components.p, null, \"完整代码请移步 \", React.createElement(_components.a, {\n    href: \"https://github.com/nodew/lazyList\"\n  }, \"GitHub\"), \"。\"), \"\\n\", React.createElement(_components.p, null, \"本文首发于\", React.createElement(_components.a, {\n    href: \"https://tech.youzan.com/lazy-list-with-generator-and-iterator/\"\n  }, \"有赞技术博客\"), \"。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"D:/projects/blog/posts/001-lazy-list-with-generator-and-iterator/index.mdx\";\nimport _kebabCase from \"lodash/kebabCase\";\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport dayjs from \"dayjs\";\nimport localizedFormat from \"dayjs/plugin/localizedFormat\";\nimport Layout from \"../components/Layout\";\nimport {Meta} from \"../components/Meta\";\nimport {TagIcon} from \"../components/TagIcon\";\ndayjs.extend(localizedFormat);\nconst PostTemplate = _ref => {\n  var _mdx$frontmatter;\n  let {data: {mdx}, children} = _ref;\n  if (mdx === null) {\n    return null;\n  }\n  return React.createElement(Layout, null, React.createElement(\"div\", {\n    className: \"max-w-5xl mx-auto\"\n  }, React.createElement(Meta, {\n    title: mdx.frontmatter.title || \"\",\n    description: mdx.frontmatter.excerpt || \"\",\n    type: \"article\",\n    extras: [{\n      name: \"keywords\",\n      content: mdx.frontmatter.keywords.join(\",\")\n    }]\n  }), React.createElement(\"div\", {\n    className: \"prose xl:prose-xl dark:prose-dark dark:xl:prose-dark-xl max-w-none\"\n  }, React.createElement(\"h1\", {\n    className: \"mb-0 xl:mb-2\"\n  }, (_mdx$frontmatter = mdx.frontmatter) === null || _mdx$frontmatter === void 0 ? void 0 : _mdx$frontmatter.title), React.createElement(\"ul\", {\n    className: \"list-none flex flex-wrap p-0 xl:p-0 my-0 xl:my-0\"\n  }, mdx.frontmatter.tags.map(tag => React.createElement(\"li\", {\n    key: tag,\n    className: \"flex-none ml-0 mr-4\"\n  }, React.createElement(Link, {\n    to: \"/tags/\" + _kebabCase(tag || \"\")\n  }, React.createElement(\"div\", {\n    className: \"flex flex-row items-center\"\n  }, React.createElement(TagIcon, null), React.createElement(\"span\", {\n    className: \"ml-1\"\n  }, tag)))))), React.createElement(\"div\", {\n    className: \"text-gray-400 dark:text-gray-700 italic mb-12\"\n  }, dayjs(mdx.frontmatter.date).format(\"LL\")), children)));\n};\nconst pageQuery = \"1935398499\";\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\";\r\n\r\nexport const TagIcon = ({ size = 20 }) => {\r\n    return (\r\n        <svg\r\n            width={size}\r\n            height={size}\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 24 24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <path d=\"M19.75 2A2.25 2.25 0 0 1 22 4.25v5.462a3.25 3.25 0 0 1-.952 2.298l-8.5 8.503a3.255 3.255 0 0 1-4.597.001L3.489 16.06a3.25 3.25 0 0 1-.003-4.596l8.5-8.51A3.25 3.25 0 0 1 14.284 2h5.465Zm0 1.5h-5.465c-.465 0-.91.185-1.239.513l-8.512 8.523a1.75 1.75 0 0 0 .015 2.462l4.461 4.454a1.755 1.755 0 0 0 2.477 0l8.5-8.503a1.75 1.75 0 0 0 .513-1.237V4.25a.75.75 0 0 0-.75-.75ZM17 5.502a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Z\" />\r\n        </svg>\r\n    );\r\n};\r\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["module","exports","t","e","n","r","i","s","u","a","o","f","h","c","d","l","$","y","M","name","weekdays","split","months","ordinal","m","String","length","Array","join","v","z","utcOffset","Math","abs","floor","date","year","month","clone","add","ceil","p","w","D","ms","Q","toLowerCase","replace","g","_","S","args","arguments","O","locale","$L","utc","$u","x","$x","$offset","this","parse","prototype","$d","Date","NaN","test","match","substring","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","toString","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","toDate","apply","slice","$locale","weekStart","$set","min","daysInMonth","get","Number","round","subtract","format","invalidDate","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","T","forEach","extend","$i","isDayjs","en","Ls","LTS","LT","L","LL","LLL","LLLL","formats","toUpperCase","call","_createMdxContent","props","_components","Object","assign","h2","span","h3","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","dayjs","localizedFormat","PostTemplate","_ref","_mdx$frontmatter","data","mdx","children","Layout","className","Meta","title","frontmatter","description","excerpt","type","extras","content","keywords","tags","map","tag","key","Link","to","_kebabCase","TagIcon","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","size","width","height","fill","viewBox","xmlns","Symbol","array","iteratee","index","result","accumulator","initAccum","reAsciiWord","string","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","undefined","value","object","arrayMap","isArray","isSymbol","INFINITY","symbolProto","symbolToString","baseToString","arrayReduce","deburr","words","reApos","RegExp","callback","deburrLetter","basePropertyOf","freeGlobal","objectProto","hasOwnProperty","nativeObjectToString","isOwn","unmasked","reHasUnicodeWord","freeSelf","self","root","Function","rsAstralRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsModifier","rsOptVar","rsSeq","rsEmoji","reUnicodeWord","reLatin","reComboMark","baseGetTag","isObjectLike","symbolTag","kebabCase","createCompounder","word","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}