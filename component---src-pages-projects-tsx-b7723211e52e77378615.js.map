{"version":3,"file":"component---src-pages-projects-tsx-b7723211e52e77378615.js","mappings":"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","sources":["webpack://blog/./src/components/ThemeProvider.tsx","webpack://blog/./src/components/Header.tsx","webpack://blog/./src/components/Footer.tsx","webpack://blog/./src/components/Layout.tsx","webpack://blog/./src/pages/projects.tsx"],"sourcesContent":["import React, { FC } from \"react\";\r\n\r\nconst THEME_KEY = \"theme\";\r\n\r\nexport const getInitialTheme = (): string => {\r\n    if (typeof window !== \"undefined\" && window.localStorage) {\r\n        const storedTheme = window.localStorage.getItem(THEME_KEY);\r\n        if (typeof storedTheme === \"string\") {\r\n            return storedTheme;\r\n        }\r\n\r\n        const userMedia = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n        if (userMedia.matches) {\r\n            return \"dark\";\r\n        }\r\n    }\r\n\r\n    return \"light\";\r\n};\r\n\r\ntype ThemeContextProps = {\r\n    theme: string;\r\n    setTheme: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nexport const ThemeContext = React.createContext<Partial<ThemeContextProps>>({});\r\n\r\ntype ThemeProviderProps = {\r\n    children: React.ReactNode;\r\n};\r\n\r\nexport const ThemeProvider: FC<ThemeProviderProps> = (\r\n    props: ThemeProviderProps\r\n) => {\r\n    const [theme, setTheme] = React.useState(getInitialTheme);\r\n\r\n    const rawSetTheme = (rawTheme: string) => {\r\n        const root = window.document.documentElement;\r\n        const isDark = rawTheme === \"dark\";\r\n\r\n        root.classList.remove(isDark ? \"light\" : \"dark\");\r\n        root.classList.add(rawTheme);\r\n\r\n        localStorage.setItem(THEME_KEY, rawTheme);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        rawSetTheme(theme);\r\n    }, [theme]);\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ theme, setTheme }}>\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n    );\r\n};\r\n","import { Link } from \"gatsby\";\r\nimport React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"./ThemeProvider\";\r\n\r\nexport interface HeaderProps {\r\n    activeNavItem?: string;\r\n}\r\n\r\nexport const Header = ({ activeNavItem = \"\" }: HeaderProps) => {\r\n    const { theme, setTheme } = useContext(ThemeContext);\r\n\r\n    const icon = theme === \"light\" ? \"/images/moon.svg\" : \"/images/sunny.svg\";\r\n\r\n    const handleThemeChange = () => {\r\n        setTheme!(theme === \"light\" ? \"dark\" : \"light\");\r\n    };\r\n\r\n    return (\r\n        <header className=\"text-base mb-14\">\r\n            <div className=\"max-w-5xl flex flex-col lg:flex-row items-center text-center lg:text-left m-auto\">\r\n                <div className=\"leading-none flex flex-grow items-center\">\r\n                    <div className=\"block select-none py-1 font-bold text-xl text-gray-800 dark:text-gray-100\">\r\n                        <Link to=\"/\">Qiao@www:~$</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex flex-row items-center\">\r\n                    <nav className=\"select-none mt-4 lg:mt-0\">\r\n                        <ul className=\"text-xl text-gray-700 dark:text-gray-200 flex\">\r\n                            <li\r\n                                className={`w-24 text-center hover:font-semibold ${\r\n                                    activeNavItem === \"home\"\r\n                                        ? \"font-bold hover:font-bold\"\r\n                                        : \"\"\r\n                                }`}\r\n                            >\r\n                                <Link to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li\r\n                                className={`w-24 text-center hover:font-semibold ${\r\n                                    activeNavItem === \"posts\"\r\n                                        ? \"font-bold hover:font-bold\"\r\n                                        : \"\"\r\n                                }`}\r\n                            >\r\n                                <Link to=\"/posts\">Posts</Link>\r\n                            </li>\r\n                            <li\r\n                                className={`w-24 text-center hover:font-semibold ${\r\n                                    activeNavItem === \"about\"\r\n                                        ? \"font-bold hover:font-bold\"\r\n                                        : \"\"\r\n                                }`}\r\n                            >\r\n                                <Link to=\"/about\">About</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    <div\r\n                        className=\"mx-3 select-none mt-4 lg:mt-0 cursor-pointer\"\r\n                        onClick={handleThemeChange}\r\n                        title=\"Toggle theme\"\r\n                    >\r\n                        <svg\r\n                            width=\"20\"\r\n                            height=\"20\"\r\n                            fill=\"currentColor\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10Zm0-2V4a8 8 0 1 1 0 16Z\" />\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\nexport const Footer = () => {\r\n    const year = new Date().getFullYear();\r\n    const { site } = useStaticQuery<GatsbyTypes.SiteAuthorQuery>(\r\n        graphql`\r\n            query SiteAuthor {\r\n                site {\r\n                    siteMetadata {\r\n                        author {\r\n                            name\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `\r\n    );\r\n\r\n    const name = site?.siteMetadata?.author?.name || \"\";\r\n\r\n    return (\r\n        <footer className=\"text-base mt-32 text-gray-400 dark:text-gray-600\">\r\n            <div className=\"max-w-5xl text-center m-auto\">\r\n                <p>\r\n                    © {year} • WANGQIAO.ME • ALL RIGHTS RESERVED\r\n                </p>\r\n                <p>\r\n                    Powered by {` `}\r\n                    <a\r\n                        className=\"text-blue-400 hover:text-blue-800\"\r\n                        href=\"https://www.gatsbyjs.com\"\r\n                    >\r\n                        Gatsby\r\n                    </a>\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nimport { Header } from \"./Header\";\r\nimport { Footer } from \"./Footer\";\r\nimport { ThemeProvider } from \"./ThemeProvider\";\r\n\r\nexport interface LayoutProps {\r\n    children: React.ReactNode;\r\n    activeNavItem?: string;\r\n}\r\n\r\nexport const Layout = ({ children, activeNavItem }: LayoutProps) => {\r\n    return (\r\n        <ThemeProvider>\r\n            <div className=\"bg-white dark:bg-dark dark:antialiased text-base text-gray-700 dark:text-gray-200 p-8 min-h-screen flex flex-col\">\r\n                <Header activeNavItem={activeNavItem} />\r\n                <div className=\"flex-1\">{children}</div>\r\n                <Footer />\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nimport Layout from \"../components/Layout\";\r\n\r\nexport default () => {\r\n    return (\r\n        <Layout activeNavItem=\"projects\">\r\n            <h1>Hello World</h1>\r\n        </Layout>\r\n    );\r\n};\r\n"],"names":["THEME_KEY","getInitialTheme","window","localStorage","storedTheme","getItem","matchMedia","matches","ThemeContext","React","ThemeProvider","props","theme","setTheme","rawTheme","root","isDark","document","documentElement","classList","remove","add","setItem","Provider","value","children","Header","activeNavItem","useContext","className","Link","to","onClick","title","width","height","fill","viewBox","xmlns","d","Footer","year","Date","getFullYear","site","useStaticQuery","siteMetadata","author","name","href","Layout"],"sourceRoot":""}