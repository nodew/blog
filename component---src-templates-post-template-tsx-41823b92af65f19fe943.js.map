{"version":3,"sources":["webpack:///./src/components/Post/Comments/Comments.tsx","webpack:///./src/components/Post/Content/Content.tsx","webpack:///./src/components/Post/Meta/Meta.tsx","webpack:///./src/components/Post/Tags/Tags.tsx","webpack:///./src/components/Post/Post.tsx","webpack:///./src/templates/post-template.tsx","webpack:///./src/hooks/use-site-metadata.ts","webpack:///./src/hooks/use-categories-list.ts","webpack:///./src/hooks/use-tags-list.ts","webpack:///./src/hooks/index.ts","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/components/Layout/index.ts","webpack:///./node_modules/react-disqus-comments/build/main.js","webpack:///./node_modules/react-disqus-comments/build/components/DisqusThread.js"],"names":["Comments","_ref","postTitle","postSlug","_useSiteMetadata","useSiteMetadata","url","disqusShortname","react","main_default","a","shortname","identifier","title","Content","body","className","styles","content","content__title","content__body","dangerouslySetInnerHTML","__html","Meta","date","meta","meta__date","moment","format","Tags","tags","tagSlugs","tags__list","map","slug","i","key","gatsby_browser_entry","to","Post","post","html","_post$fields","fields","_post$frontmatter","frontmatter","post__content","Post_Content_Content","post__footer","Post_Meta_Meta","Post_Tags_Tags","post__comments","Post_Comments_Comments","__webpack_require__","d","__webpack_exports__","query","PostTemplate","data","siteTitle","siteSubtitle","subtitle","_data$markdownRemark$","markdownRemark","postDescription","description","metaDescription","Layout","components_Post_Post","_2388124708","site","siteMetadata","useCategoriesList","_3964968768","allMarkdownRemark","group","useTagsList","_4175916191","use_site_metadata","use_categories_list","use_tags_list","children","layout","Helmet_default","lang","name","property","components_Layout_Layout","module","exports","Object","defineProperty","value","_extends","assign","target","arguments","length","source","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","DISQUS_CONFIG","__disqusAdded","copyProps","context","onNewComment","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","instance","TypeError","_classCallCheck","this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","loadDisqus","nextProps","nextState","_this2","reduce","memo","some","config","_defineProperty","createElement","id","child","disqus","document","parent","getElementsByTagName","async","type","src","appendChild","_this3","forEach","DISQUS","reset","reload","replace","window","disqus_config","addDisqusScript","displayName","propTypes","string","isRequired","category_id","func","defaultProps","location","href"],"mappings":"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","file":"component---src-templates-post-template-tsx-41823b92af65f19fe943.js","sourcesContent":["import * as React from \"react\";\r\nimport ReactDisqusComments from \"react-disqus-comments\";\r\nimport { useSiteMetadata } from \"../../../hooks\";\r\n\r\ninterface Props {\r\n  postTitle: string;\r\n  postSlug: string;\r\n}\r\n\r\nconst Comments = ({ postTitle, postSlug }: Props) => {\r\n  const { url, disqusShortname } = useSiteMetadata();\r\n\r\n  if (!disqusShortname) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ReactDisqusComments\r\n      shortname={disqusShortname}\r\n      identifier={postTitle}\r\n      title={postTitle}\r\n      url={url + postSlug}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import * as React from \"react\";\r\nimport styles from \"./Content.module.scss\";\r\n\r\ninterface Props {\r\n  body: string;\r\n  title: string;\r\n}\r\n\r\nconst Content = ({ body, title }: Props) => (\r\n  <div className={styles.content}>\r\n    <h1 className={styles.content__title}>{title}</h1>\r\n    <div className={styles.content__body} dangerouslySetInnerHTML={{ __html: body }} />\r\n  </div>\r\n);\r\n\r\nexport default Content;\r\n","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport styles from \"./Meta.module.scss\";\r\n\r\ninterface Props {\r\n  date: string;\r\n}\r\n\r\nconst Meta = ({ date }: Props) => (\r\n  <div className={styles.meta}>\r\n    <p className={styles.meta__date}>Published at {moment(date).format(\"D MMM YYYY\")}</p>\r\n  </div>\r\n);\r\n\r\nexport default Meta;\r\n","import * as React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styles from \"./Tags.module.scss\";\r\n\r\ninterface Props {\r\n  tags: string[];\r\n  tagSlugs: string[];\r\n}\r\n\r\nconst Tags = ({ tags, tagSlugs }: Props) => (\r\n  <div className={styles.tags}>\r\n    <ul className={styles.tags__list}>\r\n      {tagSlugs && tagSlugs.map((slug, i) => (\r\n        <li className={styles[\"tags__list-item\"]} key={tags[i]}>\r\n          <Link to={slug} className={styles[\"tags__list-item-link\"]}>\r\n            {tags[i]}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default Tags;\r\n","import * as React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport Comments from \"./Comments\";\r\nimport Content from \"./Content\";\r\nimport Meta from \"./Meta\";\r\nimport Tags from \"./Tags\";\r\nimport styles from \"./Post.module.scss\";\r\nimport { Node } from \"../../types\";\r\n\r\ninterface Props {\r\n  post: Node;\r\n}\r\n\r\nconst Post = ({ post }: Props) => {\r\n  const { html } = post;\r\n  const { tagSlugs, slug } = post.fields;\r\n  const { tags, title, date } = post.frontmatter;\r\n\r\n  return (\r\n    <div className={styles.post}>\r\n      <Link className={styles[\"post__home-button\"]} to=\"/\">All Articles</Link>\r\n\r\n      <div className={styles.post__content}>\r\n        <Content body={html} title={title} />\r\n      </div>\r\n\r\n      <div className={styles.post__footer}>\r\n        <Meta date={date} />\r\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\r\n      </div>\r\n\r\n      <div className={styles.post__comments}>\r\n        <Comments postSlug={slug} postTitle={post.frontmatter.title} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import * as React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/Layout\";\r\nimport Post from \"../components/Post\";\r\nimport { useSiteMetadata } from \"../hooks\";\r\nimport { MarkdownRemark } from \"../types\";\r\n\r\ninterface Props {\r\n  data: {\r\n    markdownRemark: MarkdownRemark;\r\n  };\r\n}\r\n\r\nconst PostTemplate = ({ data }: Props) => {\r\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\r\n  const { title: postTitle, description: postDescription } = data.markdownRemark.frontmatter;\r\n  const metaDescription = postDescription !== null ? postDescription : siteSubtitle;\r\n\r\n  return (\r\n    <Layout title={`${postTitle} - ${siteTitle}`} description={metaDescription}>\r\n      <Post post={data.markdownRemark} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query PostBySlug($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      html\r\n      fields {\r\n        slug\r\n        tagSlugs\r\n      }\r\n      frontmatter {\r\n        date\r\n        description\r\n        tags\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PostTemplate;\r\n","import { useStaticQuery, graphql } from 'gatsby';\r\n\r\nconst useSiteMetadata = () => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query SiteMetaData {\r\n        site {\r\n          siteMetadata {\r\n            author {\r\n              name\r\n              bio\r\n              photo\r\n              contacts {\r\n                email\r\n                twitter\r\n                github\r\n              }\r\n            }\r\n            menu {\r\n              label\r\n              path\r\n            }\r\n            url\r\n            title\r\n            subtitle\r\n            copyright\r\n            disqusShortname\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  return site.siteMetadata;\r\n};\r\n\r\nexport default useSiteMetadata;\r\n","import { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nconst useCategoriesList = () => {\r\n  const { allMarkdownRemark } = useStaticQuery(\r\n    graphql`\r\n      query CategoriesListQuery {\r\n        allMarkdownRemark(\r\n          filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\r\n        ) {\r\n          group(field: frontmatter___category) {\r\n            fieldValue\r\n            totalCount\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  );\r\n\r\n  return allMarkdownRemark.group;\r\n};\r\n\r\nexport default useCategoriesList;\r\n","import { useStaticQuery, graphql } from 'gatsby';\r\n\r\nconst useTagsList = () => {\r\n  const { allMarkdownRemark } = useStaticQuery(\r\n    graphql`\r\n      query TagsListQuery {\r\n        allMarkdownRemark(\r\n          filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\r\n        ) {\r\n          group(field: frontmatter___tags) {\r\n            fieldValue\r\n            totalCount\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  return allMarkdownRemark.group;\r\n};\r\n\r\nexport default useTagsList;\r\n","export { default as useSiteMetadata } from './use-site-metadata';\r\nexport { default as useCategoriesList } from './use-categories-list';\r\nexport { default as useTagsList } from './use-tags-list';\r\n","import * as React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { ReactNode } from \"react\";\r\nimport styles from \"./Layout.module.scss\";\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  title: string;\r\n  description?: string;\r\n}\r\n\r\nconst Layout = ({ children, title, description }: Props) => (\r\n  <div className={styles.layout}>\r\n    <Helmet>\r\n      <html lang=\"en\" />\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta property=\"og:site_name\" content={title} />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:title\" content={title} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Layout;\r\n","// @flow\r\nexport { default } from './Layout';\r\n","'use strict';\n\nmodule.exports = require('./components/DisqusThread');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n    var onNewComment = props.onNewComment,\n        language = props.language,\n        rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n    for (var prop in rest) {\n        context.page[prop] = rest[prop];\n    }\n\n    // Setting the language - if none is provided, the default one is used\n    context.language = language;\n\n    if (onNewComment) {\n        context.callbacks = {\n            onNewComment: [onNewComment]\n        };\n    }\n}\n\nvar DisqusThread = function (_React$Component) {\n    _inherits(DisqusThread, _React$Component);\n\n    function DisqusThread() {\n        _classCallCheck(this, DisqusThread);\n\n        return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n    }\n\n    _createClass(DisqusThread, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            return nextProps.identifier !== this.props.identifier;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var props = Object.keys(this.props).reduce(function (memo, key) {\n                return DISQUS_CONFIG.some(function (config) {\n                    return config === key;\n                }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n            }, {});\n\n            return _react2.default.createElement(\n                'div',\n                props,\n                _react2.default.createElement('div', { id: 'disqus_thread' })\n            );\n        }\n    }, {\n        key: 'addDisqusScript',\n        value: function addDisqusScript() {\n            if (__disqusAdded) {\n                return;\n            }\n\n            var child = this.disqus = document.createElement('script');\n            var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n            child.async = true;\n            child.type = 'text/javascript';\n            child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n            parent.appendChild(child);\n            __disqusAdded = true;\n        }\n    }, {\n        key: 'loadDisqus',\n        value: function loadDisqus() {\n            var _this3 = this;\n\n            var props = {};\n\n            // Extract Disqus props that were supplied to this component\n            DISQUS_CONFIG.forEach(function (prop) {\n                // prop \"shortname\" is only necessary for loading the script, not for the config itself\n                if (prop !== 'shortname' && !!_this3.props[prop]) {\n                    props[prop] = _this3.props[prop];\n                }\n            });\n\n            // If Disqus has already been added, reset it\n            if (typeof DISQUS !== 'undefined') {\n                DISQUS.reset({\n                    reload: true,\n                    config: function config() {\n                        copyProps(this, props);\n\n                        // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n                        this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n                    }\n                });\n            } else {\n                // Otherwise add Disqus to the page\n                window.disqus_config = function () {\n                    copyProps(this, props);\n                };\n                this.addDisqusScript();\n            }\n        }\n    }]);\n\n    return DisqusThread;\n}(_react2.default.Component);\n\nDisqusThread.displayName = 'DisqusThread';\n\nDisqusThread.propTypes = {\n    id: _propTypes2.default.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _propTypes2.default.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _propTypes2.default.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _propTypes2.default.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _propTypes2.default.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _propTypes2.default.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _propTypes2.default.func,\n\n    /**\n     * `language` tells the Disqus service which language should be used.\n     * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n     * If undefined, English is used as default one\n     */\n    language: _propTypes2.default.string\n};\n\nDisqusThread.defaultProps = {\n    url: typeof window === 'undefined' ? null : window.location.href\n};\n\nexports.default = DisqusThread;"],"sourceRoot":""}