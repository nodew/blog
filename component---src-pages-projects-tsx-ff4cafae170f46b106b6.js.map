{"version":3,"file":"component---src-pages-projects-tsx-ff4cafae170f46b106b6.js","mappings":"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","sources":["webpack://blog/./src/components/ThemeProvider.tsx","webpack://blog/./src/components/Header.tsx","webpack://blog/./src/components/Footer.tsx","webpack://blog/./src/components/Layout.tsx","webpack://blog/./src/pages/projects.tsx"],"sourcesContent":["import React, { FC } from \"react\";\r\n\r\nconst THEME_KEY = \"theme\";\r\n\r\nexport const getInitialTheme = (): string => {\r\n    if (typeof window !== \"undefined\" && window.localStorage) {\r\n        const storedTheme = window.localStorage.getItem(THEME_KEY);\r\n        if (typeof storedTheme === \"string\") {\r\n            return storedTheme;\r\n        }\r\n\r\n        const userMedia = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n        if (userMedia.matches) {\r\n            return \"dark\";\r\n        }\r\n    }\r\n\r\n    return \"light\";\r\n};\r\n\r\ntype ThemeContextProps = {\r\n    theme: string;\r\n    setTheme: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nexport const ThemeContext = React.createContext<Partial<ThemeContextProps>>({});\r\n\r\ntype ThemeProviderProps = {\r\n    children: React.ReactNode;\r\n};\r\n\r\nexport const ThemeProvider: FC<ThemeProviderProps> = (\r\n    props: ThemeProviderProps\r\n) => {\r\n    const [theme, setTheme] = React.useState(getInitialTheme);\r\n\r\n    const rawSetTheme = (rawTheme: string) => {\r\n        const root = window.document.documentElement;\r\n        const isDark = rawTheme === \"dark\";\r\n\r\n        root.classList.remove(isDark ? \"light\" : \"dark\");\r\n        root.classList.add(rawTheme);\r\n\r\n        localStorage.setItem(THEME_KEY, rawTheme);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        rawSetTheme(theme);\r\n    }, [theme]);\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ theme, setTheme }}>\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n    );\r\n};\r\n","import { Link } from \"gatsby\";\r\nimport React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"./ThemeProvider\";\r\n\r\n\r\n\r\ninterface NavItemProps {\r\n    link: string;\r\n    name: string;\r\n    active: boolean;\r\n}\r\n\r\nconst NavItem = ({ link, name, active }: NavItemProps) => {\r\n    return (\r\n        <li\r\n            className={`main-nav-item px-8 hover:font-semibold ${\r\n                active\r\n                    ? \"font-bold hover:font-bold\"\r\n                    : \"\"\r\n            }`}\r\n        >\r\n            <Link to={link} data-text={name}>{name}</Link>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport interface HeaderProps {\r\n    activeNavItem?: string;\r\n}\r\n\r\nexport const Header = ({ activeNavItem = \"\" }: HeaderProps) => {\r\n    const { theme, setTheme } = useContext(ThemeContext);\r\n\r\n    const icon = theme === \"light\" ? \"/images/moon.svg\" : \"/images/sunny.svg\";\r\n\r\n    const handleThemeChange = () => {\r\n        setTheme!(theme === \"light\" ? \"dark\" : \"light\");\r\n    };\r\n\r\n    return (\r\n        <header className=\"text-base mb-14\">\r\n            <div className=\"max-w-5xl flex flex-col lg:flex-row items-center text-center lg:text-left m-auto\">\r\n                <div className=\"leading-none flex flex-grow items-center\">\r\n                    <div className=\"block select-none py-1 font-bold text-xl text-gray-800 dark:text-gray-100\">\r\n                        <Link to=\"/\">Qiao@www:~$</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex flex-row items-center\">\r\n                    <nav className=\"select-none mt-4 lg:mt-0\">\r\n                        <ul className=\"text-xl text-gray-700 dark:text-gray-200 flex\">\r\n                            <NavItem name=\"Home\" link=\"/\" active={activeNavItem === \"home\"} />\r\n                            <NavItem name=\"Post\" link=\"/posts\" active={activeNavItem === \"posts\"} />\r\n                            <NavItem name=\"Publication\" link=\"/books\" active={activeNavItem === \"books\"} />\r\n                            <NavItem name=\"About\" link=\"/about\" active={activeNavItem === \"about\"} />\r\n                        </ul>\r\n                    </nav>\r\n                    <div\r\n                        className=\"mx-3 select-none mt-4 lg:mt-0 cursor-pointer\"\r\n                        onClick={handleThemeChange}\r\n                        title=\"Toggle theme\"\r\n                    >\r\n                        <svg\r\n                            width=\"20\"\r\n                            height=\"20\"\r\n                            fill=\"currentColor\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10Zm0-2V4a8 8 0 1 1 0 16Z\" />\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\nexport const Footer = () => {\r\n    const year = new Date().getFullYear();\r\n    const { site } = useStaticQuery<GatsbyTypes.SiteAuthorQuery>(\r\n        graphql`\r\n            query SiteAuthor {\r\n                site {\r\n                    siteMetadata {\r\n                        author {\r\n                            name\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `\r\n    );\r\n\r\n    const name = site?.siteMetadata?.author?.name || \"\";\r\n\r\n    return (\r\n        <footer className=\"text-base mt-32 text-gray-400 dark:text-gray-600\">\r\n            <div className=\"max-w-5xl text-center m-auto\">\r\n                <p>\r\n                    © {year} • WANGQIAO.ME • ALL RIGHTS RESERVED\r\n                </p>\r\n                <p>\r\n                    Powered by {` `}\r\n                    <a\r\n                        className=\"text-blue-400 hover:text-blue-800\"\r\n                        href=\"https://www.gatsbyjs.com\"\r\n                    >\r\n                        Gatsby\r\n                    </a>\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport { Header } from \"./Header\";\r\nimport { Footer } from \"./Footer\";\r\nimport { ThemeProvider } from \"./ThemeProvider\";\r\n\r\nexport interface LayoutProps {\r\n    children: React.ReactNode;\r\n    activeNavItem?: string;\r\n}\r\n\r\nexport const Layout = ({ children, activeNavItem }: LayoutProps) => {\r\n    return (\r\n        <ThemeProvider>\r\n            <div className=\"bg-gray-50 dark:bg-gray-800 dark:antialiased text-base text-gray-700 dark:text-gray-200 p-8 min-h-screen flex flex-col\">\r\n                <Header activeNavItem={activeNavItem} />\r\n                <div className=\"flex-1\">{children}</div>\r\n                <Footer />\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nimport Layout from \"../components/Layout\";\r\n\r\nexport default () => {\r\n    return (\r\n        <Layout activeNavItem=\"projects\">\r\n            <h1>Hello World</h1>\r\n        </Layout>\r\n    );\r\n};\r\n"],"names":["THEME_KEY","getInitialTheme","window","localStorage","storedTheme","getItem","matchMedia","matches","ThemeContext","React","ThemeProvider","props","theme","setTheme","rawTheme","root","document","documentElement","isDark","classList","remove","add","setItem","rawSetTheme","Provider","value","children","NavItem","_ref","link","name","active","className","Link","to","Header","_ref2","activeNavItem","useContext","onClick","handleThemeChange","title","width","height","fill","viewBox","xmlns","d","Footer","_site$siteMetadata","_site$siteMetadata$au","year","Date","getFullYear","site","useStaticQuery","siteMetadata","author","href","Layout"],"sourceRoot":""}